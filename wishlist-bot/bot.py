import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message

BOT_TOKEN = os.getenv("BOT_TOKEN")

ADMIN_IDS = [877872483]

BACKEND_URL = "https://my-wishlist.onrender.com"

bot = Bot(token=BOT_TOKEN, parse_mode="HTML")
dp = Dispatcher()


@dp.message(Command("start"))
async def handle_start(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç –ø—É–±–ª–∏—á–Ω–æ.\n–ï—Å–ª–∏ —Ç—ã –∞–¥–º–∏–Ω, –Ω–∞–ø–∏—à–∏ /admin.")


@dp.message(Command("admin"))
async def handle_admin(message: Message):
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∫–µ.")
        return
    url = f"{BACKEND_URL}/admin?user_id={message.from_user.id}"
    await message.answer(f"üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:\n<a href='{url}'>–û—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω–∫—É</a>")


@dp.message(Command("reset"))
async def handle_reset(message: Message):
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("üö´ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
        return

    import aiohttp
    async with aiohttp.ClientSession() as session:
        async with session.post(f"{BACKEND_URL}/admin/reset", json={"user_id": message.from_user.id}) as resp:
            if resp.status == 200:
                await message.answer("‚úÖ –í—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å–±—Ä–æ—à–µ–Ω—ã.")
            else:
                await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–±—Ä–æ—Å–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
